name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

#    OPTION 1: The "standard" way
#    - name: Build with Maven
#      run: mvn clean package -DskipTests
#
#    - name: Build Docker image
#      run: docker build -t hecklerm/catwd-demo:distroless .

#    OPTION 2: Build a JVM container image using Cloud Native Buildpacks
#    - name: Build container with Maven
#      run: mvn spring-boot:build-image -Dspring-boot.build-image.imageName=hecklerm/catwd-demo:cnbjvm -Dspring-boot.build-image.createdDate=now

#    OPTION 3: Build a native executable container image using Cloud Native Buildpacks & the Liberica Native Image Kit
    - name: Install Liberica NIK
      run: |
        wget https://download.bell-sw.com/vm/23.1.6/bellsoft-liberica-vm-openjdk21.0.6+10-23.1.6+1-linux-x64-musl.tar.gz
        tar -xzf bellsoft-liberica-vm-openjdk21.0.6+10-23.1.6+1-linux-x64-musl.tar.gz
        export PATH=$PWD/bellsoft-liberica-vm-openjdk21-23.1.6/bin:$PATH

    - name: Build container with Maven
      run: mvn -Pnative spring-boot:build-image -Dspring-boot.build-image.imageName=hecklerm/catwd-demo:cnbnat -Dspring-boot.build-image.createdDate=now

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Push Docker image
#      run: docker push hecklerm/catwd-demo:cnbjvm
      run: docker push hecklerm/catwd-demo:cnbnat
